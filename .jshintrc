{
    // "{true}":     "Tolerate Automatic Semicolon Insertion (no semicolons)",
    "asi":           false,
    // "{true}":     "Prohibit bitwise operators (&, |, ^, etc.)",
    "bitwise":       true,
    // "{true}":     "Tolerate assignments where comparisons would be expected",
    "boss":          false,
    // "{true}":     "Web Browser (window, document, etc)",
    "browser":       true,
    // "{true}":     "Identifiers must be in camelCase",
    "camelcase":     true,
    // "{true}":     "CouchDB",
    "couch":         false,
    // "{true}":     "Require {} for every new block or scope",
    "curly":         true,
    // "{true}":     "Allow debugger statements e.g. browser breakpoints.",
    "debug":         false,
    // "{true}":     "Development/debugging (alert, confirm, etc)",
    "devel":         true,
    // "{true}":     "Dojo Toolkit",
    "dojo":          false,
    // "{true}":     "Require triple equals (===) for comparison",
    "eqeqeq":        true,
    // "{true}":     "Tolerate use of '== null'",
    "eqnull":        false,
    // "{true}":     "Allow ES5 syntax (ex: getters and setters)",
    "es5":           true,
    // "{true}":     "Allow ES.next (ES6) syntax (ex: 'const')",
    "esnext":        true,
    // "{true}":     "Tolerate use of 'eval' and 'new Function()'",
    "evil":          false,
    // "{true}":     "Tolerate 'ExpressionStatement' as Programs",
    "expr":          false,
    // "{true}":     "Require filtering for..in loops with obj.hasOwnProperty()",
    "forin":         true,
    // "{true}":     "Tolerate defining variables inside control statements",
    "funcscope":     false,
    // "{values}     "additional predefine' globa' v'riable'",
    "globals":       {},
    // "{true}":     "Allow global 'use strict' (also enables 'strict')",
    "globalstrict":  false,
    // "{true}":     "Require immediate invocations to be wrapped in parens e.g. '(function () { } ());'",
    "immed":         true,
    // "{int}":      "Number of spaces to use for indentation",
    "indent":        4,
    // "{true}":     "Tolerate using the '__iterator__' property",
    "iterator":      false,
    // "{true}":     "jQuery",
    "jquery":        false,
    // "{true}":     "Tolerate omitting a semicolon for the last statement of a 1-line block",
    "lastsemic":     false,
    // "{true}":     "Require variables/functions to be defined before being used",
    "latedef":       true,
    // "{true}":     "Tolerate possibly unsafe line breakings",
    "laxbreak":      false,
    // "{true}":     "Tolerate comma-first style coding",
    "laxcomma":      false,
    // "{true}":     "Tolerate functions being defined in loops",
    "loopfunc":      false,
    // "{int}":      "Max cyclomatic complexity per function",
    "maxcomplexity": false,
    // "{int}":      "Max depth of nested blocks (within functions)",
    "maxdepth":      false,
    // "{int}":      "Maximum error before stopping",
    "maxerr":        50,
    // "{int}":      "Max number of characters per line",
    "maxlen":        false,
    // "{int}":      "Max number of formal params allowed per function",
    "maxparams":     false,
    // "{int}":      "Max number statements per function",
    "maxstatements": false,
    // "{true}":     "MooTools",
    "mootools":      false,
    // "{true}":     "Allow Mozilla specific syntax (extends and overrides esnext features)",
    "moz":           false,
    // "{true}":     "Tolerate multi-line strings",
    "multistr":      false,
    // "{true}":     "Require capitalization of all constructor functions e.g. 'new F()'",
    "newcap":        true,
    // "{true}":     "Prohibit use of 'arguments.caller' and 'arguments.callee'",
    "noarg":         true,
    // "{true}":     "Node.js",
    "node":          false,
    // "{true}":     "Prohibit use of empty blocks",
    "noempty":       true,
    // "{true}":     "Prohibit use of constructors for side-effects (without assignment)",
    "nonew":         true,
    // "{true}":     "Widely adopted globals (escape, unescape, etc)",
    "nonstandard":   false,
    // "{true}":     "This option suppresses warnings about invalid typeof operator values. This operator has only a limited set of possible return values. By default, JSHint warns when you compare its result with an invalid value which often can be a typo.",
    "notypeof":      true,
    // "{true}"      "Allow only one variable per scope"
    "onevar":        true,
    // "{true}":     "Prohibit use of '++' & '--'",
    "plusplus":      true,
    // "{true}":     "Tolerate using the '__proto__' property",
    "proto":         false,
    // "{true}":     "Prototype and Scriptaculous",
    "prototypejs":   false,
    // "{values}     "false - do nothing (default), true - consistent, 'single', 'double'",
    "quotmark":      "single",
    // "{true}":     "Rhino",
    "rhino":         false,
    // "{true}":     "Tolerate script-targeted URLs",
    "scripturl":     false,
    // "{true}":     "Allows re-define variables later in code e.g. 'var x=1; x=2;'",
    "shadow":        false,
    // "{true}":     "This option suppresses warnings about mixed tabs and spaces when the latter are used for alignmnent only",
    "smarttabs":     true,
    // "{true}":     "Requires all functions run in ES5 Strict Mode",
    "strict":        true,
    // "{true}":     "Tolerate using '[]' notation when it can still be expressed in dot notation",
    "sub":           false,
    // "{true}":     "Tolerate 'new function () { ... };' and 'new Object;'",
    "supernew":      false,
    // "{true}":     "Require all non-global variables to be declared (prevents global leaks)",
    "undef":         true,
    // "{true}":     "Require all defined variables be used",
    "unused":        true,
    // "{true}":     "Tolerate using this in a non-constructor function",
    "validthis":     false,
    // "{true}":     "Web Workers",
    "worker":        false,
    // "{true}":     "Windows Scripting Host",
    "wsh":           false,
    // "{true}":     "Yahoo User Interface",
    "yui":           false,
}
